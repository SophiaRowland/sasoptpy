proc optmodel;
var numCows {{0,1,2,3,4,5,6,7,8,9,10,11,12}, {0,1,2,3,4,5}} >= 0;
numCows[0, 0].lb = 10;
numCows[0, 0].ub = 10;
numCows[1, 0].lb = 10;
numCows[1, 0].ub = 10;
numCows[2, 0].lb = 10;
numCows[2, 0].ub = 10;
numCows[3, 0].lb = 10;
numCows[3, 0].ub = 10;
numCows[4, 0].lb = 10;
numCows[4, 0].ub = 10;
numCows[5, 0].lb = 10;
numCows[5, 0].ub = 10;
numCows[6, 0].lb = 10;
numCows[6, 0].ub = 10;
numCows[7, 0].lb = 10;
numCows[7, 0].ub = 10;
numCows[8, 0].lb = 10;
numCows[8, 0].ub = 10;
numCows[9, 0].lb = 10;
numCows[9, 0].ub = 10;
numCows[10, 0].lb = 10;
numCows[10, 0].ub = 10;
numCows[11, 0].lb = 10;
numCows[11, 0].ub = 10;
numCows[12, 0].ub = 0;
var numBullocksSold {{1,2,3,4,5}} >= 0;
var numHeifersSold {{1,2,3,4,5}} >= 0;
var grainAcres {{'group1','group2','group3','group4'}, {1,2,3,4,5}} >= 0;
grainAcres['group1', 1].ub = 20;
grainAcres['group1', 2].ub = 20;
grainAcres['group1', 3].ub = 20;
grainAcres['group1', 4].ub = 20;
grainAcres['group1', 5].ub = 20;
grainAcres['group2', 1].ub = 30;
grainAcres['group2', 2].ub = 30;
grainAcres['group2', 3].ub = 30;
grainAcres['group2', 4].ub = 30;
grainAcres['group2', 5].ub = 30;
grainAcres['group3', 1].ub = 20;
grainAcres['group3', 2].ub = 20;
grainAcres['group3', 3].ub = 20;
grainAcres['group3', 4].ub = 20;
grainAcres['group3', 5].ub = 20;
grainAcres['group4', 1].ub = 10;
grainAcres['group4', 2].ub = 10;
grainAcres['group4', 3].ub = 10;
grainAcres['group4', 4].ub = 10;
grainAcres['group4', 5].ub = 10;
var grainBought {{1,2,3,4,5}} >= 0;
var grainSold {{1,2,3,4,5}} >= 0;
var sugarBeetAcres {{1,2,3,4,5}} >= 0;
var sugarBeetBought {{1,2,3,4,5}} >= 0;
var sugarBeetSold {{1,2,3,4,5}} >= 0;
var numExcessLabourHours {{1,2,3,4,5}} >= 0;
var capitalOutlay {{1,2,3,4,5}} >= 0;
max totalProfit = 30 * numBullocksSold[1] + 40 * numHeifersSold[1] + 120 * numCows[12, 1] + 270 * numCows[2, 1] + 270 * numCows[3, 1] + 270 * numCows[4, 1] + 270 * numCows[5, 1] + 270 * numCows[6, 1] + 270 * numCows[7, 1] + 270 * numCows[8, 1] + 270 * numCows[9, 1] + 270 * numCows[10, 1] + 270 * numCows[11, 1] + 75 * grainSold[1] + 58 * sugarBeetSold[1] - 90 * grainBought[1] - 70 * sugarBeetBought[1] - 1.2 * numExcessLabourHours[1] - 50 * numCows[0, 1] - 50 * numCows[1, 1] - 15 * grainAcres['group1', 1] - 15 * grainAcres['group2', 1] - 15 * grainAcres['group3', 1] - 15 * grainAcres['group4', 1] - 10 * sugarBeetAcres[1] - 398.50412503517 * capitalOutlay[1] + 30 * numBullocksSold[2] + 40 * numHeifersSold[2] + 120 * numCows[12, 2] + 270 * numCows[2, 2] + 270 * numCows[3, 2] + 270 * numCows[4, 2] + 270 * numCows[5, 2] + 270 * numCows[6, 2] + 270 * numCows[7, 2] + 270 * numCows[8, 2] + 270 * numCows[9, 2] + 270 * numCows[10, 2] + 270 * numCows[11, 2] + 75 * grainSold[2] + 58 * sugarBeetSold[2] - 90 * grainBought[2] - 70 * sugarBeetBought[2] - 1.2 * numExcessLabourHours[2] - 50 * numCows[0, 2] - 50 * numCows[1, 2] - 15 * grainAcres['group1', 2] - 15 * grainAcres['group2', 2] - 15 * grainAcres['group3', 2] - 15 * grainAcres['group4', 2] - 10 * sugarBeetAcres[2] - 398.50412503517 * capitalOutlay[2] + 30 * numBullocksSold[3] + 40 * numHeifersSold[3] + 120 * numCows[12, 3] + 270 * numCows[2, 3] + 270 * numCows[3, 3] + 270 * numCows[4, 3] + 270 * numCows[5, 3] + 270 * numCows[6, 3] + 270 * numCows[7, 3] + 270 * numCows[8, 3] + 270 * numCows[9, 3] + 270 * numCows[10, 3] + 270 * numCows[11, 3] + 75 * grainSold[3] + 58 * sugarBeetSold[3] - 90 * grainBought[3] - 70 * sugarBeetBought[3] - 1.2 * numExcessLabourHours[3] - 50 * numCows[0, 3] - 50 * numCows[1, 3] - 15 * grainAcres['group1', 3] - 15 * grainAcres['group2', 3] - 15 * grainAcres['group3', 3] - 15 * grainAcres['group4', 3] - 10 * sugarBeetAcres[3] - 398.50412503517 * capitalOutlay[3] + 30 * numBullocksSold[4] + 40 * numHeifersSold[4] + 120 * numCows[12, 4] + 270 * numCows[2, 4] + 270 * numCows[3, 4] + 270 * numCows[4, 4] + 270 * numCows[5, 4] + 270 * numCows[6, 4] + 270 * numCows[7, 4] + 270 * numCows[8, 4] + 270 * numCows[9, 4] + 270 * numCows[10, 4] + 270 * numCows[11, 4] + 75 * grainSold[4] + 58 * sugarBeetSold[4] - 90 * grainBought[4] - 70 * sugarBeetBought[4] - 1.2 * numExcessLabourHours[4] - 50 * numCows[0, 4] - 50 * numCows[1, 4] - 15 * grainAcres['group1', 4] - 15 * grainAcres['group2', 4] - 15 * grainAcres['group3', 4] - 15 * grainAcres['group4', 4] - 10 * sugarBeetAcres[4] - 398.50412503517 * capitalOutlay[4] + 30 * numBullocksSold[5] + 40 * numHeifersSold[5] + 120 * numCows[12, 5] + 270 * numCows[2, 5] + 270 * numCows[3, 5] + 270 * numCows[4, 5] + 270 * numCows[5, 5] + 270 * numCows[6, 5] + 270 * numCows[7, 5] + 270 * numCows[8, 5] + 270 * numCows[9, 5] + 270 * numCows[10, 5] + 270 * numCows[11, 5] + 75 * grainSold[5] + 58 * sugarBeetSold[5] - 90 * grainBought[5] - 70 * sugarBeetBought[5] - 1.2 * numExcessLabourHours[5] - 50 * numCows[0, 5] - 50 * numCows[1, 5] - 15 * grainAcres['group1', 5] - 15 * grainAcres['group2', 5] - 15 * grainAcres['group3', 5] - 15 * grainAcres['group4', 5] - 10 * sugarBeetAcres[5] - 398.50412503517 * capitalOutlay[5] - 20000.0;
con num_acres_1 : 0.666666666667 * numCows[0, 1] + 0.666666666667 * numCows[1, 1] + numCows[2, 1] + numCows[3, 1] + numCows[4, 1] + numCows[5, 1] + numCows[6, 1] + numCows[7, 1] + numCows[8, 1] + numCows[9, 1] + numCows[10, 1] + numCows[11, 1] + grainAcres['group1', 1] + grainAcres['group2', 1] + grainAcres['group3', 1] + grainAcres['group4', 1] + sugarBeetAcres[1] <= 200.0;
con num_acres_2 : 0.666666666667 * numCows[0, 2] + 0.666666666667 * numCows[1, 2] + numCows[2, 2] + numCows[3, 2] + numCows[4, 2] + numCows[5, 2] + numCows[6, 2] + numCows[7, 2] + numCows[8, 2] + numCows[9, 2] + numCows[10, 2] + numCows[11, 2] + grainAcres['group1', 2] + grainAcres['group2', 2] + grainAcres['group3', 2] + grainAcres['group4', 2] + sugarBeetAcres[2] <= 200.0;
con num_acres_3 : 0.666666666667 * numCows[0, 3] + 0.666666666667 * numCows[1, 3] + numCows[2, 3] + numCows[3, 3] + numCows[4, 3] + numCows[5, 3] + numCows[6, 3] + numCows[7, 3] + numCows[8, 3] + numCows[9, 3] + numCows[10, 3] + numCows[11, 3] + grainAcres['group1', 3] + grainAcres['group2', 3] + grainAcres['group3', 3] + grainAcres['group4', 3] + sugarBeetAcres[3] <= 200.0;
con num_acres_4 : 0.666666666667 * numCows[0, 4] + 0.666666666667 * numCows[1, 4] + numCows[2, 4] + numCows[3, 4] + numCows[4, 4] + numCows[5, 4] + numCows[6, 4] + numCows[7, 4] + numCows[8, 4] + numCows[9, 4] + numCows[10, 4] + numCows[11, 4] + grainAcres['group1', 4] + grainAcres['group2', 4] + grainAcres['group3', 4] + grainAcres['group4', 4] + sugarBeetAcres[4] <= 200.0;
con num_acres_5 : 0.666666666667 * numCows[0, 5] + 0.666666666667 * numCows[1, 5] + numCows[2, 5] + numCows[3, 5] + numCows[4, 5] + numCows[5, 5] + numCows[6, 5] + numCows[7, 5] + numCows[8, 5] + numCows[9, 5] + numCows[10, 5] + numCows[11, 5] + grainAcres['group1', 5] + grainAcres['group2', 5] + grainAcres['group3', 5] + grainAcres['group4', 5] + sugarBeetAcres[5] <= 200.0;

con aging_0_0 : numCows[1, 1] - 0.95 * numCows[0, 0] = 0.0;
con aging_0_1 : numCows[1, 2] - 0.95 * numCows[0, 1] = 0.0;
con aging_0_2 : numCows[1, 3] - 0.95 * numCows[0, 2] = 0.0;
con aging_0_3 : numCows[1, 4] - 0.95 * numCows[0, 3] = 0.0;
con aging_0_4 : numCows[1, 5] - 0.95 * numCows[0, 4] = 0.0;
con aging_1_0 : numCows[2, 1] - 0.95 * numCows[1, 0] = 0.0;
con aging_1_1 : numCows[2, 2] - 0.95 * numCows[1, 1] = 0.0;
con aging_1_2 : numCows[2, 3] - 0.95 * numCows[1, 2] = 0.0;
con aging_1_3 : numCows[2, 4] - 0.95 * numCows[1, 3] = 0.0;
con aging_1_4 : numCows[2, 5] - 0.95 * numCows[1, 4] = 0.0;
con aging_2_0 : numCows[3, 1] - 0.98 * numCows[2, 0] = 0.0;
con aging_2_1 : numCows[3, 2] - 0.98 * numCows[2, 1] = 0.0;
con aging_2_2 : numCows[3, 3] - 0.98 * numCows[2, 2] = 0.0;
con aging_2_3 : numCows[3, 4] - 0.98 * numCows[2, 3] = 0.0;
con aging_2_4 : numCows[3, 5] - 0.98 * numCows[2, 4] = 0.0;
con aging_3_0 : numCows[4, 1] - 0.98 * numCows[3, 0] = 0.0;
con aging_3_1 : numCows[4, 2] - 0.98 * numCows[3, 1] = 0.0;
con aging_3_2 : numCows[4, 3] - 0.98 * numCows[3, 2] = 0.0;
con aging_3_3 : numCows[4, 4] - 0.98 * numCows[3, 3] = 0.0;
con aging_3_4 : numCows[4, 5] - 0.98 * numCows[3, 4] = 0.0;
con aging_4_0 : numCows[5, 1] - 0.98 * numCows[4, 0] = 0.0;
con aging_4_1 : numCows[5, 2] - 0.98 * numCows[4, 1] = 0.0;
con aging_4_2 : numCows[5, 3] - 0.98 * numCows[4, 2] = 0.0;
con aging_4_3 : numCows[5, 4] - 0.98 * numCows[4, 3] = 0.0;
con aging_4_4 : numCows[5, 5] - 0.98 * numCows[4, 4] = 0.0;
con aging_5_0 : numCows[6, 1] - 0.98 * numCows[5, 0] = 0.0;
con aging_5_1 : numCows[6, 2] - 0.98 * numCows[5, 1] = 0.0;
con aging_5_2 : numCows[6, 3] - 0.98 * numCows[5, 2] = 0.0;
con aging_5_3 : numCows[6, 4] - 0.98 * numCows[5, 3] = 0.0;
con aging_5_4 : numCows[6, 5] - 0.98 * numCows[5, 4] = 0.0;
con aging_6_0 : numCows[7, 1] - 0.98 * numCows[6, 0] = 0.0;
con aging_6_1 : numCows[7, 2] - 0.98 * numCows[6, 1] = 0.0;
con aging_6_2 : numCows[7, 3] - 0.98 * numCows[6, 2] = 0.0;
con aging_6_3 : numCows[7, 4] - 0.98 * numCows[6, 3] = 0.0;
con aging_6_4 : numCows[7, 5] - 0.98 * numCows[6, 4] = 0.0;
con aging_7_0 : numCows[8, 1] - 0.98 * numCows[7, 0] = 0.0;
con aging_7_1 : numCows[8, 2] - 0.98 * numCows[7, 1] = 0.0;
con aging_7_2 : numCows[8, 3] - 0.98 * numCows[7, 2] = 0.0;
con aging_7_3 : numCows[8, 4] - 0.98 * numCows[7, 3] = 0.0;
con aging_7_4 : numCows[8, 5] - 0.98 * numCows[7, 4] = 0.0;
con aging_8_0 : numCows[9, 1] - 0.98 * numCows[8, 0] = 0.0;
con aging_8_1 : numCows[9, 2] - 0.98 * numCows[8, 1] = 0.0;
con aging_8_2 : numCows[9, 3] - 0.98 * numCows[8, 2] = 0.0;
con aging_8_3 : numCows[9, 4] - 0.98 * numCows[8, 3] = 0.0;
con aging_8_4 : numCows[9, 5] - 0.98 * numCows[8, 4] = 0.0;
con aging_9_0 : numCows[10, 1] - 0.98 * numCows[9, 0] = 0.0;
con aging_9_1 : numCows[10, 2] - 0.98 * numCows[9, 1] = 0.0;
con aging_9_2 : numCows[10, 3] - 0.98 * numCows[9, 2] = 0.0;
con aging_9_3 : numCows[10, 4] - 0.98 * numCows[9, 3] = 0.0;
con aging_9_4 : numCows[10, 5] - 0.98 * numCows[9, 4] = 0.0;
con aging_10_0 : numCows[11, 1] - 0.98 * numCows[10, 0] = 0.0;
con aging_10_1 : numCows[11, 2] - 0.98 * numCows[10, 1] = 0.0;
con aging_10_2 : numCows[11, 3] - 0.98 * numCows[10, 2] = 0.0;
con aging_10_3 : numCows[11, 4] - 0.98 * numCows[10, 3] = 0.0;
con aging_10_4 : numCows[11, 5] - 0.98 * numCows[10, 4] = 0.0;
con aging_11_0 : numCows[12, 1] - 0.98 * numCows[11, 0] = 0.0;
con aging_11_1 : numCows[12, 2] - 0.98 * numCows[11, 1] = 0.0;
con aging_11_2 : numCows[12, 3] - 0.98 * numCows[11, 2] = 0.0;
con aging_11_3 : numCows[12, 4] - 0.98 * numCows[11, 3] = 0.0;
con aging_11_4 : numCows[12, 5] - 0.98 * numCows[11, 4] = 0.0;

con numBullocksSold_def_1 : numBullocksSold[1] - 0.55 * numCows[2, 1] - 0.55 * numCows[3, 1] - 0.55 * numCows[4, 1] - 0.55 * numCows[5, 1] - 0.55 * numCows[6, 1] - 0.55 * numCows[7, 1] - 0.55 * numCows[8, 1] - 0.55 * numCows[9, 1] - 0.55 * numCows[10, 1] - 0.55 * numCows[11, 1] = 0.0;
con numBullocksSold_def_2 : numBullocksSold[2] - 0.55 * numCows[2, 2] - 0.55 * numCows[3, 2] - 0.55 * numCows[4, 2] - 0.55 * numCows[5, 2] - 0.55 * numCows[6, 2] - 0.55 * numCows[7, 2] - 0.55 * numCows[8, 2] - 0.55 * numCows[9, 2] - 0.55 * numCows[10, 2] - 0.55 * numCows[11, 2] = 0.0;
con numBullocksSold_def_3 : numBullocksSold[3] - 0.55 * numCows[2, 3] - 0.55 * numCows[3, 3] - 0.55 * numCows[4, 3] - 0.55 * numCows[5, 3] - 0.55 * numCows[6, 3] - 0.55 * numCows[7, 3] - 0.55 * numCows[8, 3] - 0.55 * numCows[9, 3] - 0.55 * numCows[10, 3] - 0.55 * numCows[11, 3] = 0.0;
con numBullocksSold_def_4 : numBullocksSold[4] - 0.55 * numCows[2, 4] - 0.55 * numCows[3, 4] - 0.55 * numCows[4, 4] - 0.55 * numCows[5, 4] - 0.55 * numCows[6, 4] - 0.55 * numCows[7, 4] - 0.55 * numCows[8, 4] - 0.55 * numCows[9, 4] - 0.55 * numCows[10, 4] - 0.55 * numCows[11, 4] = 0.0;
con numBullocksSold_def_5 : numBullocksSold[5] - 0.55 * numCows[2, 5] - 0.55 * numCows[3, 5] - 0.55 * numCows[4, 5] - 0.55 * numCows[5, 5] - 0.55 * numCows[6, 5] - 0.55 * numCows[7, 5] - 0.55 * numCows[8, 5] - 0.55 * numCows[9, 5] - 0.55 * numCows[10, 5] - 0.55 * numCows[11, 5] = 0.0;

con numHeifersSold_def_1 : numCows[0, 1] - 0.55 * numCows[2, 1] - 0.55 * numCows[3, 1] - 0.55 * numCows[4, 1] - 0.55 * numCows[5, 1] - 0.55 * numCows[6, 1] - 0.55 * numCows[7, 1] - 0.55 * numCows[8, 1] - 0.55 * numCows[9, 1] - 0.55 * numCows[10, 1] - 0.55 * numCows[11, 1] + numHeifersSold[1] = 0.0;
con numHeifersSold_def_2 : numCows[0, 2] - 0.55 * numCows[2, 2] - 0.55 * numCows[3, 2] - 0.55 * numCows[4, 2] - 0.55 * numCows[5, 2] - 0.55 * numCows[6, 2] - 0.55 * numCows[7, 2] - 0.55 * numCows[8, 2] - 0.55 * numCows[9, 2] - 0.55 * numCows[10, 2] - 0.55 * numCows[11, 2] + numHeifersSold[2] = 0.0;
con numHeifersSold_def_3 : numCows[0, 3] - 0.55 * numCows[2, 3] - 0.55 * numCows[3, 3] - 0.55 * numCows[4, 3] - 0.55 * numCows[5, 3] - 0.55 * numCows[6, 3] - 0.55 * numCows[7, 3] - 0.55 * numCows[8, 3] - 0.55 * numCows[9, 3] - 0.55 * numCows[10, 3] - 0.55 * numCows[11, 3] + numHeifersSold[3] = 0.0;
con numHeifersSold_def_4 : numCows[0, 4] - 0.55 * numCows[2, 4] - 0.55 * numCows[3, 4] - 0.55 * numCows[4, 4] - 0.55 * numCows[5, 4] - 0.55 * numCows[6, 4] - 0.55 * numCows[7, 4] - 0.55 * numCows[8, 4] - 0.55 * numCows[9, 4] - 0.55 * numCows[10, 4] - 0.55 * numCows[11, 4] + numHeifersSold[4] = 0.0;
con numHeifersSold_def_5 : numCows[0, 5] - 0.55 * numCows[2, 5] - 0.55 * numCows[3, 5] - 0.55 * numCows[4, 5] - 0.55 * numCows[5, 5] - 0.55 * numCows[6, 5] - 0.55 * numCows[7, 5] - 0.55 * numCows[8, 5] - 0.55 * numCows[9, 5] - 0.55 * numCows[10, 5] - 0.55 * numCows[11, 5] + numHeifersSold[5] = 0.0;

con max_num_cows_def_1 : numCows[0, 1] + numCows[1, 1] + numCows[2, 1] + numCows[3, 1] + numCows[4, 1] + numCows[5, 1] + numCows[6, 1] + numCows[7, 1] + numCows[8, 1] + numCows[9, 1] + numCows[10, 1] + numCows[11, 1] - capitalOutlay[1] <= 130;
con max_num_cows_def_2 : numCows[0, 2] + numCows[1, 2] + numCows[2, 2] + numCows[3, 2] + numCows[4, 2] + numCows[5, 2] + numCows[6, 2] + numCows[7, 2] + numCows[8, 2] + numCows[9, 2] + numCows[10, 2] + numCows[11, 2] - capitalOutlay[1] - capitalOutlay[2] <= 130;
con max_num_cows_def_3 : numCows[0, 3] + numCows[1, 3] + numCows[2, 3] + numCows[3, 3] + numCows[4, 3] + numCows[5, 3] + numCows[6, 3] + numCows[7, 3] + numCows[8, 3] + numCows[9, 3] + numCows[10, 3] + numCows[11, 3] - capitalOutlay[1] - capitalOutlay[2] - capitalOutlay[3] <= 130;
con max_num_cows_def_4 : numCows[0, 4] + numCows[1, 4] + numCows[2, 4] + numCows[3, 4] + numCows[4, 4] + numCows[5, 4] + numCows[6, 4] + numCows[7, 4] + numCows[8, 4] + numCows[9, 4] + numCows[10, 4] + numCows[11, 4] - capitalOutlay[1] - capitalOutlay[2] - capitalOutlay[3] - capitalOutlay[4] <= 130;
con max_num_cows_def_5 : numCows[0, 5] + numCows[1, 5] + numCows[2, 5] + numCows[3, 5] + numCows[4, 5] + numCows[5, 5] + numCows[6, 5] + numCows[7, 5] + numCows[8, 5] + numCows[9, 5] + numCows[10, 5] + numCows[11, 5] - capitalOutlay[1] - capitalOutlay[2] - capitalOutlay[3] - capitalOutlay[4] - capitalOutlay[5] <= 130;

con grain_req_def_1 : 0.6 * numCows[2, 1] + 0.6 * numCows[3, 1] + 0.6 * numCows[4, 1] + 0.6 * numCows[5, 1] + 0.6 * numCows[6, 1] + 0.6 * numCows[7, 1] + 0.6 * numCows[8, 1] + 0.6 * numCows[9, 1] + 0.6 * numCows[10, 1] + 0.6 * numCows[11, 1] - 1.1 * grainAcres['group1', 1] - 0.9 * grainAcres['group2', 1] - 0.8 * grainAcres['group3', 1] - 0.65 * grainAcres['group4', 1] - grainBought[1] + grainSold[1] <= 0.0;
con grain_req_def_2 : 0.6 * numCows[2, 2] + 0.6 * numCows[3, 2] + 0.6 * numCows[4, 2] + 0.6 * numCows[5, 2] + 0.6 * numCows[6, 2] + 0.6 * numCows[7, 2] + 0.6 * numCows[8, 2] + 0.6 * numCows[9, 2] + 0.6 * numCows[10, 2] + 0.6 * numCows[11, 2] - 1.1 * grainAcres['group1', 2] - 0.9 * grainAcres['group2', 2] - 0.8 * grainAcres['group3', 2] - 0.65 * grainAcres['group4', 2] - grainBought[2] + grainSold[2] <= 0.0;
con grain_req_def_3 : 0.6 * numCows[2, 3] + 0.6 * numCows[3, 3] + 0.6 * numCows[4, 3] + 0.6 * numCows[5, 3] + 0.6 * numCows[6, 3] + 0.6 * numCows[7, 3] + 0.6 * numCows[8, 3] + 0.6 * numCows[9, 3] + 0.6 * numCows[10, 3] + 0.6 * numCows[11, 3] - 1.1 * grainAcres['group1', 3] - 0.9 * grainAcres['group2', 3] - 0.8 * grainAcres['group3', 3] - 0.65 * grainAcres['group4', 3] - grainBought[3] + grainSold[3] <= 0.0;
con grain_req_def_4 : 0.6 * numCows[2, 4] + 0.6 * numCows[3, 4] + 0.6 * numCows[4, 4] + 0.6 * numCows[5, 4] + 0.6 * numCows[6, 4] + 0.6 * numCows[7, 4] + 0.6 * numCows[8, 4] + 0.6 * numCows[9, 4] + 0.6 * numCows[10, 4] + 0.6 * numCows[11, 4] - 1.1 * grainAcres['group1', 4] - 0.9 * grainAcres['group2', 4] - 0.8 * grainAcres['group3', 4] - 0.65 * grainAcres['group4', 4] - grainBought[4] + grainSold[4] <= 0.0;
con grain_req_def_5 : 0.6 * numCows[2, 5] + 0.6 * numCows[3, 5] + 0.6 * numCows[4, 5] + 0.6 * numCows[5, 5] + 0.6 * numCows[6, 5] + 0.6 * numCows[7, 5] + 0.6 * numCows[8, 5] + 0.6 * numCows[9, 5] + 0.6 * numCows[10, 5] + 0.6 * numCows[11, 5] - 1.1 * grainAcres['group1', 5] - 0.9 * grainAcres['group2', 5] - 0.8 * grainAcres['group3', 5] - 0.65 * grainAcres['group4', 5] - grainBought[5] + grainSold[5] <= 0.0;

con sugar_beet_req_def_1 : 0.7 * numCows[2, 1] + 0.7 * numCows[3, 1] + 0.7 * numCows[4, 1] + 0.7 * numCows[5, 1] + 0.7 * numCows[6, 1] + 0.7 * numCows[7, 1] + 0.7 * numCows[8, 1] + 0.7 * numCows[9, 1] + 0.7 * numCows[10, 1] + 0.7 * numCows[11, 1] - 1.5 * sugarBeetAcres[1] - sugarBeetBought[1] + sugarBeetSold[1] <= 0.0;
con sugar_beet_req_def_2 : 0.7 * numCows[2, 2] + 0.7 * numCows[3, 2] + 0.7 * numCows[4, 2] + 0.7 * numCows[5, 2] + 0.7 * numCows[6, 2] + 0.7 * numCows[7, 2] + 0.7 * numCows[8, 2] + 0.7 * numCows[9, 2] + 0.7 * numCows[10, 2] + 0.7 * numCows[11, 2] - 1.5 * sugarBeetAcres[2] - sugarBeetBought[2] + sugarBeetSold[2] <= 0.0;
con sugar_beet_req_def_3 : 0.7 * numCows[2, 3] + 0.7 * numCows[3, 3] + 0.7 * numCows[4, 3] + 0.7 * numCows[5, 3] + 0.7 * numCows[6, 3] + 0.7 * numCows[7, 3] + 0.7 * numCows[8, 3] + 0.7 * numCows[9, 3] + 0.7 * numCows[10, 3] + 0.7 * numCows[11, 3] - 1.5 * sugarBeetAcres[3] - sugarBeetBought[3] + sugarBeetSold[3] <= 0.0;
con sugar_beet_req_def_4 : 0.7 * numCows[2, 4] + 0.7 * numCows[3, 4] + 0.7 * numCows[4, 4] + 0.7 * numCows[5, 4] + 0.7 * numCows[6, 4] + 0.7 * numCows[7, 4] + 0.7 * numCows[8, 4] + 0.7 * numCows[9, 4] + 0.7 * numCows[10, 4] + 0.7 * numCows[11, 4] - 1.5 * sugarBeetAcres[4] - sugarBeetBought[4] + sugarBeetSold[4] <= 0.0;
con sugar_beet_req_def_5 : 0.7 * numCows[2, 5] + 0.7 * numCows[3, 5] + 0.7 * numCows[4, 5] + 0.7 * numCows[5, 5] + 0.7 * numCows[6, 5] + 0.7 * numCows[7, 5] + 0.7 * numCows[8, 5] + 0.7 * numCows[9, 5] + 0.7 * numCows[10, 5] + 0.7 * numCows[11, 5] - 1.5 * sugarBeetAcres[5] - sugarBeetBought[5] + sugarBeetSold[5] <= 0.0;

con labour_req_def_1 : 10 * numCows[0, 1] + 10 * numCows[1, 1] + 42 * numCows[2, 1] + 42 * numCows[3, 1] + 42 * numCows[4, 1] + 42 * numCows[5, 1] + 42 * numCows[6, 1] + 42 * numCows[7, 1] + 42 * numCows[8, 1] + 42 * numCows[9, 1] + 42 * numCows[10, 1] + 42 * numCows[11, 1] + 4 * grainAcres['group1', 1] + 4 * grainAcres['group2', 1] + 4 * grainAcres['group3', 1] + 4 * grainAcres['group4', 1] + 14 * sugarBeetAcres[1] - numExcessLabourHours[1] <= 5500;
con labour_req_def_2 : 10 * numCows[0, 2] + 10 * numCows[1, 2] + 42 * numCows[2, 2] + 42 * numCows[3, 2] + 42 * numCows[4, 2] + 42 * numCows[5, 2] + 42 * numCows[6, 2] + 42 * numCows[7, 2] + 42 * numCows[8, 2] + 42 * numCows[9, 2] + 42 * numCows[10, 2] + 42 * numCows[11, 2] + 4 * grainAcres['group1', 2] + 4 * grainAcres['group2', 2] + 4 * grainAcres['group3', 2] + 4 * grainAcres['group4', 2] + 14 * sugarBeetAcres[2] - numExcessLabourHours[2] <= 5500;
con labour_req_def_3 : 10 * numCows[0, 3] + 10 * numCows[1, 3] + 42 * numCows[2, 3] + 42 * numCows[3, 3] + 42 * numCows[4, 3] + 42 * numCows[5, 3] + 42 * numCows[6, 3] + 42 * numCows[7, 3] + 42 * numCows[8, 3] + 42 * numCows[9, 3] + 42 * numCows[10, 3] + 42 * numCows[11, 3] + 4 * grainAcres['group1', 3] + 4 * grainAcres['group2', 3] + 4 * grainAcres['group3', 3] + 4 * grainAcres['group4', 3] + 14 * sugarBeetAcres[3] - numExcessLabourHours[3] <= 5500;
con labour_req_def_4 : 10 * numCows[0, 4] + 10 * numCows[1, 4] + 42 * numCows[2, 4] + 42 * numCows[3, 4] + 42 * numCows[4, 4] + 42 * numCows[5, 4] + 42 * numCows[6, 4] + 42 * numCows[7, 4] + 42 * numCows[8, 4] + 42 * numCows[9, 4] + 42 * numCows[10, 4] + 42 * numCows[11, 4] + 4 * grainAcres['group1', 4] + 4 * grainAcres['group2', 4] + 4 * grainAcres['group3', 4] + 4 * grainAcres['group4', 4] + 14 * sugarBeetAcres[4] - numExcessLabourHours[4] <= 5500;
con labour_req_def_5 : 10 * numCows[0, 5] + 10 * numCows[1, 5] + 42 * numCows[2, 5] + 42 * numCows[3, 5] + 42 * numCows[4, 5] + 42 * numCows[5, 5] + 42 * numCows[6, 5] + 42 * numCows[7, 5] + 42 * numCows[8, 5] + 42 * numCows[9, 5] + 42 * numCows[10, 5] + 42 * numCows[11, 5] + 4 * grainAcres['group1', 5] + 4 * grainAcres['group2', 5] + 4 * grainAcres['group3', 5] + 4 * grainAcres['group4', 5] + 14 * sugarBeetAcres[5] - numExcessLabourHours[5] <= 5500;

con cash_flow_1 : 30 * numBullocksSold[1] + 40 * numHeifersSold[1] + 120 * numCows[12, 1] + 270 * numCows[2, 1] + 270 * numCows[3, 1] + 270 * numCows[4, 1] + 270 * numCows[5, 1] + 270 * numCows[6, 1] + 270 * numCows[7, 1] + 270 * numCows[8, 1] + 270 * numCows[9, 1] + 270 * numCows[10, 1] + 270 * numCows[11, 1] + 75 * grainSold[1] + 58 * sugarBeetSold[1] - 90 * grainBought[1] - 70 * sugarBeetBought[1] - 1.2 * numExcessLabourHours[1] - 50 * numCows[0, 1] - 50 * numCows[1, 1] - 15 * grainAcres['group1', 1] - 15 * grainAcres['group2', 1] - 15 * grainAcres['group3', 1] - 15 * grainAcres['group4', 1] - 10 * sugarBeetAcres[1] - 39.850412503517 * capitalOutlay[1] >= 4000.0;
con cash_flow_2 : 30 * numBullocksSold[2] + 40 * numHeifersSold[2] + 120 * numCows[12, 2] + 270 * numCows[2, 2] + 270 * numCows[3, 2] + 270 * numCows[4, 2] + 270 * numCows[5, 2] + 270 * numCows[6, 2] + 270 * numCows[7, 2] + 270 * numCows[8, 2] + 270 * numCows[9, 2] + 270 * numCows[10, 2] + 270 * numCows[11, 2] + 75 * grainSold[2] + 58 * sugarBeetSold[2] - 90 * grainBought[2] - 70 * sugarBeetBought[2] - 1.2 * numExcessLabourHours[2] - 50 * numCows[0, 2] - 50 * numCows[1, 2] - 15 * grainAcres['group1', 2] - 15 * grainAcres['group2', 2] - 15 * grainAcres['group3', 2] - 15 * grainAcres['group4', 2] - 10 * sugarBeetAcres[2] - 39.850412503517 * capitalOutlay[1] - 39.850412503517 * capitalOutlay[2] >= 4000.0;
con cash_flow_3 : 30 * numBullocksSold[3] + 40 * numHeifersSold[3] + 120 * numCows[12, 3] + 270 * numCows[2, 3] + 270 * numCows[3, 3] + 270 * numCows[4, 3] + 270 * numCows[5, 3] + 270 * numCows[6, 3] + 270 * numCows[7, 3] + 270 * numCows[8, 3] + 270 * numCows[9, 3] + 270 * numCows[10, 3] + 270 * numCows[11, 3] + 75 * grainSold[3] + 58 * sugarBeetSold[3] - 90 * grainBought[3] - 70 * sugarBeetBought[3] - 1.2 * numExcessLabourHours[3] - 50 * numCows[0, 3] - 50 * numCows[1, 3] - 15 * grainAcres['group1', 3] - 15 * grainAcres['group2', 3] - 15 * grainAcres['group3', 3] - 15 * grainAcres['group4', 3] - 10 * sugarBeetAcres[3] - 39.850412503517 * capitalOutlay[1] - 39.850412503517 * capitalOutlay[2] - 39.850412503517 * capitalOutlay[3] >= 4000.0;
con cash_flow_4 : 30 * numBullocksSold[4] + 40 * numHeifersSold[4] + 120 * numCows[12, 4] + 270 * numCows[2, 4] + 270 * numCows[3, 4] + 270 * numCows[4, 4] + 270 * numCows[5, 4] + 270 * numCows[6, 4] + 270 * numCows[7, 4] + 270 * numCows[8, 4] + 270 * numCows[9, 4] + 270 * numCows[10, 4] + 270 * numCows[11, 4] + 75 * grainSold[4] + 58 * sugarBeetSold[4] - 90 * grainBought[4] - 70 * sugarBeetBought[4] - 1.2 * numExcessLabourHours[4] - 50 * numCows[0, 4] - 50 * numCows[1, 4] - 15 * grainAcres['group1', 4] - 15 * grainAcres['group2', 4] - 15 * grainAcres['group3', 4] - 15 * grainAcres['group4', 4] - 10 * sugarBeetAcres[4] - 39.850412503517 * capitalOutlay[1] - 39.850412503517 * capitalOutlay[2] - 39.850412503517 * capitalOutlay[3] - 39.850412503517 * capitalOutlay[4] >= 4000.0;
con cash_flow_5 : 30 * numBullocksSold[5] + 40 * numHeifersSold[5] + 120 * numCows[12, 5] + 270 * numCows[2, 5] + 270 * numCows[3, 5] + 270 * numCows[4, 5] + 270 * numCows[5, 5] + 270 * numCows[6, 5] + 270 * numCows[7, 5] + 270 * numCows[8, 5] + 270 * numCows[9, 5] + 270 * numCows[10, 5] + 270 * numCows[11, 5] + 75 * grainSold[5] + 58 * sugarBeetSold[5] - 90 * grainBought[5] - 70 * sugarBeetBought[5] - 1.2 * numExcessLabourHours[5] - 50 * numCows[0, 5] - 50 * numCows[1, 5] - 15 * grainAcres['group1', 5] - 15 * grainAcres['group2', 5] - 15 * grainAcres['group3', 5] - 15 * grainAcres['group4', 5] - 10 * sugarBeetAcres[5] - 39.850412503517 * capitalOutlay[1] - 39.850412503517 * capitalOutlay[2] - 39.850412503517 * capitalOutlay[3] - 39.850412503517 * capitalOutlay[4] - 39.850412503517 * capitalOutlay[5] >= 4000.0;

con final_dairy_cows_range : 0.5 <= 0.01 * numCows[2, 5] + 0.01 * numCows[3, 5] + 0.01 * numCows[4, 5] + 0.01 * numCows[5, 5] + 0.01 * numCows[6, 5] + 0.01 * numCows[7, 5] + 0.01 * numCows[8, 5] + 0.01 * numCows[9, 5] + 0.01 * numCows[10, 5] + 0.01 * numCows[11, 5] <= 1.75;
solve;
quit;